contracts/utils/cryptography/MerkleProof.sol
...
    /**
     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up
     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt
     * hash matches the root of the tree. When processing the proof, the pairs
     * of leafs & pre-images are assumed to be sorted.
     *
     * _Available since v4.4._
     */
    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {
        bytes32 computedHash = leaf;
-        for (uint256 i = 0; i < proof.length; i++) {
+        uint256 len = proof.length;
+        for (uint256 i = 0; i < len; i++) {
            computedHash = _hashPair(computedHash, proof[i]);
        }
        return computedHash;
    }
...
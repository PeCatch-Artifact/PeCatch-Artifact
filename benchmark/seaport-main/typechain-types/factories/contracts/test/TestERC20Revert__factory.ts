/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestERC20Revert,
  TestERC20RevertInterface,
} from "../../../contracts/test/TestERC20Revert";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234620001915762000014620001fc565b60206915195cdd14995d995c9d60b21b818301526200003262000211565b6514915591549560d21b8282015282519091906001600160401b03811162000181575b6000916200006f8262000069855462000226565b62000263565b80601f8311600114620000f357508190620000a6958492620000e7575b50508160011b916000199060031b1c191617905562000317565b60126080524660a052620000b962000419565b60c052604051610dab90816200054d8239608051816104ea015260a05181610bae015260c05181610bd50152f35b0151905038806200008c565b600080529194601f1986167f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639385905b82821062000168575050916001939187620000a69894106200014e575b505050811b01905562000317565b015160001960f88460031b161c1916905538808062000140565b8060018697829497870151815501960194019062000123565b6200018b62000196565b62000055565b600080fd5b50634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b03821117620001c957604052565b620001d362000196565b604052565b601f909101601f19168101906001600160401b03821190821017620001c957604052565b604051906200020b82620001ad565b600a8252565b604051906200022082620001ad565b60068252565b90600182811c9216801562000258575b60208310146200024257565b634e487b7160e01b600052602260045260246000fd5b91607f169162000236565b601f811162000270575050565b60009081805260208220906020601f850160051c83019410620002b0575b601f0160051c01915b828110620002a457505050565b81815560010162000297565b90925082906200028e565b90601f8211620002c9575050565b60019160009083825260208220906020601f850160051c830194106200030c575b601f0160051c01915b828110620003015750505050565b8181558301620002f3565b9092508290620002ea565b80519091906001600160401b03811162000409575b600190620003468162000340845462000226565b620002bb565b602080601f83116001146200038457508192939460009262000378575b5050600019600383901b1c191690821b179055565b01519050388062000363565b6001600052601f198316959091907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6926000905b888210620003f15750508385969710620003d7575b505050811b019055565b015160001960f88460031b161c19169055388080620003cd565b808785968294968601518155019501930190620003b8565b6200041362000196565b6200032c565b6040516000908154906200042d8262000226565b92838252602093848301936001908181169081600014620005325750600114620004f2575b505091816200046c620004ec93620004dd950382620001d8565b519020604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f95810195865260208601929092527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc69085015246606085015230608085015291829060a0850190565b03601f198101835282620001d8565b51902090565b908592506000805282600020916000925b8284106200051c57505050820101816200046c62000452565b8054868501860152879490930192810162000503565b60ff19168652505050604082019050816200046c6200045256fe60806040526004361015610013575b600080fd5b60003560e01c806306fdde031461012b578063095ea7b31461012257806318160ddd1461011957806323b872dd1461011057806330adf81f14610107578063313ce567146100fe5780633644e515146100f557806340c10f19146100ec57806370a08231146100e35780637ecebe00146100da57806395d89b41146100d1578063a9059cbb146100c8578063d505accf146100bf5763dd62ed3e146100b757600080fd5b61000e610a2a565b5061000e6107a3565b5061000e6106fa565b5061000e610654565b5061000e61060c565b5061000e6105c4565b5061000e610532565b5061000e61050e565b5061000e6104cf565b5061000e610493565b5061000e610470565b5061000e610451565b5061000e6103ac565b5061000e61026d565b90600182811c9216801561017d575b602083101461014e57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691610143565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176101c857604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b919091602080825283519081818401526000945b828610610257575050601f817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092604095961161024a575b0116010190565b6000858286010152610243565b858101820151848701604001529481019461020b565b503461000e57600080600319360112610363576040519080805461029081610134565b8085529160019180831690811561032457506001146102ca575b6102c6856102ba81870382610187565b604051918291826101f7565b0390f35b80809450527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b82841061030c5750505081016020016102ba826102c66102aa565b805460208587018101919091529093019281016102f1565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016602087015250506040840192506102ba91508390506102c66102aa565b80fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b503461000e57604060031936011261000e576103c6610366565b73ffffffffffffffffffffffffffffffffffffffff60243591336000526004602052826104178260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5560405192835216907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b503461000e57600060031936011261000e576020600254604051908152f35b503461000e57606060031936011261000e5761048a610366565b5061000e610389565b503461000e57600060031936011261000e5760206040517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98152f35b503461000e57600060031936011261000e57602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461000e57600060031936011261000e57602061052a610ba9565b604051908152f35b503461000e57604060031936011261000e5761054c610366565b60007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602073ffffffffffffffffffffffffffffffffffffffff6024359485600254811981116105b7575b0160025516938484526003825260408420818154019055604051908152a3005b6105bf610aa2565b610597565b503461000e57602060031936011261000e5773ffffffffffffffffffffffffffffffffffffffff6105f3610366565b1660005260036020526020604060002054604051908152f35b503461000e57602060031936011261000e5773ffffffffffffffffffffffffffffffffffffffff61063b610366565b1660005260056020526020604060002054604051908152f35b503461000e57600080600319360112610363576040519080600180549161067a83610134565b8086529282811690811561032457506001146106a0576102c6856102ba81870382610187565b92508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8284106106e25750505081016020016102ba826102c66102aa565b805460208587018101919091529093019281016106c7565b503461000e57604060031936011261000e57610714610366565b73ffffffffffffffffffffffffffffffffffffffff602435913360005260036020526040600020838154818110610796575b039055169081600052600360205260406000208181540190556040519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203392a3602060405160018152f35b61079e610aa2565b610746565b503461000e5760e060031936011261000e576107bd610366565b6107c5610389565b604435906064359060843560ff8116810361000e5760006020917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259461080d42821015610ad2565b61093961094561081b610ba9565b928a8a6108c361084b8373ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b938454946001860190556040519485938d8d8601968791959493909260a09360c08401977f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9855273ffffffffffffffffffffffffffffffffffffffff8092166020860152166040840152606083015260808201520152565b03916108f57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe093848101835282610187565b519020604051938491898301968790916042927f19010000000000000000000000000000000000000000000000000000000000008352600283015260228201520190565b03908101835282610187565b5190206040805191825260ff92909216602082015260a4359181019190915260c435606082015281805260809060015afa15610a1d575b60005190836109ff826109da73ffffffffffffffffffffffffffffffffffffffff956109b48782168015159081610a11575b50610b44565b73ffffffffffffffffffffffffffffffffffffffff166000526004602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b556040519384528116931691602090a3005b9050888c1614386109ae565b610a25610b37565b61097c565b503461000e57604060031936011261000e576020610a99610a49610366565b73ffffffffffffffffffffffffffffffffffffffff610a66610389565b91166000526004835260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54604051908152f35b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b15610ad957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152fd5b506040513d6000823e3d90fd5b15610b4b57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f5349474e45520000000000000000000000000000000000006044820152fd5b6000467f000000000000000000000000000000000000000000000000000000000000000003610bf757507f000000000000000000000000000000000000000000000000000000000000000090565b6040518154919081610c0884610134565b80835260209485840194600191828116908115610d3a5750600114610ce2575b5050509181610c3f610cdc93610cb0950382610187565b519020604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f95810195865260208601929092527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc69085015246606085015230608085015291829060a0850190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610187565b51902090565b91908693508280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828410610d255750505082010181610c3f610cdc610c28565b80548685018601528794909301928101610d0c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168752505050604083019150829050610c3f610cdc610c2856fea26469706673582212203bde9404c096bcc8618503f3597f69be13c5b24a453841e4164f553e73af24ea64736f6c634300080e0033";

type TestERC20RevertConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestERC20RevertConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestERC20Revert__factory extends ContractFactory {
  constructor(...args: TestERC20RevertConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestERC20Revert> {
    return super.deploy(overrides || {}) as Promise<TestERC20Revert>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestERC20Revert {
    return super.attach(address) as TestERC20Revert;
  }
  override connect(signer: Signer): TestERC20Revert__factory {
    return super.connect(signer) as TestERC20Revert__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC20RevertInterface {
    return new utils.Interface(_abi) as TestERC20RevertInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC20Revert {
    return new Contract(address, _abi, signerOrProvider) as TestERC20Revert;
  }
}

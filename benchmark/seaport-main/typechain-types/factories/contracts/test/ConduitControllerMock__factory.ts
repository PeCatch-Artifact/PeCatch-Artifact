/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConduitControllerMock,
  ConduitControllerMockInterface,
} from "../../../contracts/test/ConduitControllerMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_conduitNum",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "conduit",
        type: "address",
      },
    ],
    name: "CallerIsNotNewPotentialOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "conduit",
        type: "address",
      },
    ],
    name: "CallerIsNotOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "conduit",
        type: "address",
      },
    ],
    name: "ChannelOutOfRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "conduit",
        type: "address",
      },
    ],
    name: "ConduitAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCreator",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "conduit",
        type: "address",
      },
      {
        internalType: "address",
        name: "newPotentialOwner",
        type: "address",
      },
    ],
    name: "NewPotentialOwnerAlreadySet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "conduit",
        type: "address",
      },
    ],
    name: "NewPotentialOwnerIsZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NoConduit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "conduit",
        type: "address",
      },
    ],
    name: "NoPotentialOwnerCurrentlySet",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "conduit",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "conduitKey",
        type: "bytes32",
      },
    ],
    name: "NewConduit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "conduit",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newPotentialOwner",
        type: "address",
      },
    ],
    name: "PotentialOwnerUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "conduit",
        type: "address",
      },
    ],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "conduit",
        type: "address",
      },
    ],
    name: "cancelOwnershipTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "conduitKey",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    name: "createConduit",
    outputs: [
      {
        internalType: "address",
        name: "conduit",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "conduit",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "channelIndex",
        type: "uint256",
      },
    ],
    name: "getChannel",
    outputs: [
      {
        internalType: "address",
        name: "channel",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "conduit",
        type: "address",
      },
      {
        internalType: "address",
        name: "channel",
        type: "address",
      },
    ],
    name: "getChannelStatus",
    outputs: [
      {
        internalType: "bool",
        name: "isOpen",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "conduit",
        type: "address",
      },
    ],
    name: "getChannels",
    outputs: [
      {
        internalType: "address[]",
        name: "channels",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "conduitKey",
        type: "bytes32",
      },
    ],
    name: "getConduit",
    outputs: [
      {
        internalType: "address",
        name: "conduit",
        type: "address",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getConduitCodeHashes",
    outputs: [
      {
        internalType: "bytes32",
        name: "creationCodeHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "runtimeCodeHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "conduit",
        type: "address",
      },
    ],
    name: "getKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "conduitKey",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "conduit",
        type: "address",
      },
    ],
    name: "getPotentialOwner",
    outputs: [
      {
        internalType: "address",
        name: "potentialOwner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "conduit",
        type: "address",
      },
    ],
    name: "getTotalChannels",
    outputs: [
      {
        internalType: "uint256",
        name: "totalChannels",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "conduit",
        type: "address",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "conduit",
        type: "address",
      },
      {
        internalType: "address",
        name: "newPotentialOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "conduit",
        type: "address",
      },
      {
        internalType: "address",
        name: "channel",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isOpen",
        type: "bool",
      },
    ],
    name: "updateChannel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x604060c0815234620002a45762002dd480380390816200001f81620002c0565b9283928339602092839181010312620002a4575160015560008060015480156000146200010a5750505060006102c1916200005c818401620002c0565b838152620022f991810190848383395190208451909390918291828101916001600160401b03831184841017620000fa575b8339039082f58015620000ea575b6001600160a01b03163f905b60805260a05251611ff6908162000303823960805181818161027501528181610abe0152610bda015260a05181818161029801528181610b540152610c7d0152f35b620000f4620002f5565b6200009c565b62000104620002a9565b6200008e565b600181036200019a5750505060006102999162000129818401620002c0565b83815262002b3b91810190848383395190208451909390918291828101916001600160401b038311848410176200018a575b8339039082f580156200017a575b6001600160a01b03163f90620000a8565b62000184620002f5565b62000169565b62000194620002a9565b6200015b565b60028103620002085750505060006102c191620001b9818401620002c0565b838152620025ba91810190848383395190208451909390918291828101916001600160401b038311848410176200018a578339039082f580156200017a576001600160a01b03163f90620000a8565b919290916003146200021c575b50620000a8565b91505060006102c09162000232818401620002c0565b8381526200287b91810190848383395190208451909390918291828101916001600160401b0383118484101762000294575b8339039082f5801562000284575b6001600160a01b03163f903862000215565b6200028e620002f5565b62000272565b6200029e620002a9565b62000264565b600080fd5b50634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f191682016001600160401b03811183821017620002e657604052565b620002f0620002a9565b604052565b506040513d6000823e3d90fdfe60806040526004361015610013575b600080fd5b60003560e01c8063027cc7641461012b5780630a96ad391461012257806313ad9cab1461011957806314afd79e1461011057806333bc8572146101075780634e3f9580146100fe57806351710e45146100f55780636d435421146100ec5780636e9bfd9f146100e3578063794593bc146100da5780637b37e561146100d15780638b9e028b146100c8578063906c87cc146100bf576393790f44146100b757600080fd5b61000e6111d2565b5061000e61117c565b5061000e6110dc565b5061000e610f86565b5061000e610b7c565b5061000e610a4c565b5061000e6108ed565b5061000e6106b1565b5061000e61065d565b5061000e6105d7565b5061000e610581565b5061000e6102be565b5061000e61025d565b5061000e61017a565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b503461000e57604060031936011261000e57610194610134565b602435906101a1816114ba565b73ffffffffffffffffffffffffffffffffffffffff8091169160008381528060205260036040822001548210156102215790600360408361021d966101ec9552806020522001611346565b90549060031b1c166040519182918291909173ffffffffffffffffffffffffffffffffffffffff6020820193169052565b0390f35b602484604051907f6ceb340b0000000000000000000000000000000000000000000000000000000082526004820152fd5b600091031261000e57565b503461000e57600060031936011261000e57604080517f000000000000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006020820152f35b503461000e57606060031936011261000e576102d8610134565b6102e0610157565b90604435918215918215840361000e576102f98161144b565b73ffffffffffffffffffffffffffffffffffffffff811690813b1561000e576040517fc4e8fcb500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015285151560248201526103a7926000908290604490829084905af18015610574575b61055b575b5073ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b9260048401926103d783859073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b549182159080610554575b156104275750505060036104239293016103fc8282611414565b54929073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b555b005b919493918161054b575b5061043857005b610485610423938560037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6000980192019161047483546112ea565b908082036104aa575b50505061138d565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b61051c6104ea916104e16104c16105429588611346565b905473ffffffffffffffffffffffffffffffffffffffff9160031b1c1690565b92839187611346565b90919082549060031b9173ffffffffffffffffffffffffffffffffffffffff9283811b93849216901b16911916179055565b859073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5538808061047d565b90501538610431565b50806103e2565b8061056861056e9261127b565b80610252565b38610380565b61057c6112dd565b61037b565b503461000e57602060031936011261000e57602061059d610134565b6105a6816114ba565b73ffffffffffffffffffffffffffffffffffffffff8091166000526000825260016040600020015416604051908152f35b503461000e57604060031936011261000e5760206106526105f6610134565b73ffffffffffffffffffffffffffffffffffffffff610613610157565b9161061d816114ba565b166000526000835260046040600020019073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b541515604051908152f35b503461000e57602060031936011261000e5773ffffffffffffffffffffffffffffffffffffffff61068c610134565b610695816114ba565b1660005260006020526020600360406000200154604051908152f35b503461000e57602060031936011261000e576106cb610134565b6106d4816114ba565b61073a61072160026107068473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b015473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b33036108a4576104259060007f11a3cf439fb225bfe74225716b6774765670ec1060e3796802e62139d69974da81604051a26107c4600261079b8373ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b017fffffffffffffffffffffffff00000000000000000000000000000000000000008154169055565b73ffffffffffffffffffffffffffffffffffffffff33908061080b60016107068673ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b169083167fc8894f26f396ce8c004245c8b7cd1b92103a6e4302fcbab883987149ac01b7ec6000604051a46001610863339273ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b019073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b6040517f88c3a11500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff919091166004820152602490fd5b503461000e57604060031936011261000e57610907610134565b61090f610157565b906109198161144b565b73ffffffffffffffffffffffffffffffffffffffff808316908115610a19575061096b61072160026107068573ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b81146109c95761086361042593926002927f11a3cf439fb225bfe74225716b6774765670ec1060e3796802e62139d69974da6000604051a273ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b506040517fcbc080ca00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff918216600482015291166024820152604490fd5b82602491604051917fa388d263000000000000000000000000000000000000000000000000000000008352166004820152fd5b503461000e57602060031936011261000e576040517fff00000000000000000000000000000000000000000000000000000000000000602082019081523060601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602183015260043560358301527f0000000000000000000000000000000000000000000000000000000000000000605583015273ffffffffffffffffffffffffffffffffffffffff91610b2d81607581015b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810183528261129c565b519020604080519290911673ffffffffffffffffffffffffffffffffffffffff811683523f7f000000000000000000000000000000000000000000000000000000000000000014602083015290f35b503461000e5760408060031936011261000e57600435610b9a610157565b73ffffffffffffffffffffffffffffffffffffffff91828216908115610f5d57338160601c03610f3457610c7861072186516020810190610c5c81610b017f0000000000000000000000000000000000000000000000000000000000000000883087917fffffffffffffffffffffffffffffffffffffffff000000000000000000000000605594927fff00000000000000000000000000000000000000000000000000000000000000855260601b166001840152601583015260358201520190565b51902073ffffffffffffffffffffffffffffffffffffffff1690565b92833f7f000000000000000000000000000000000000000000000000000000000000000014610eee57947f4397af6128d529b8ae0442f99db1296d5136062597a15bbc61c1b2a6431a7d15610daa8361021d96959460009960015480158c14610e105750818651806102c18082019082821067ffffffffffffffff831117610e03575b6114e6833903908df515610df6575b610d7c610d378973ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b91600183019073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b55835173ffffffffffffffffffffffffffffffffffffffff8716815260208101919091529081906040820190565b0390a15194859483167fc8894f26f396ce8c004245c8b7cd1b92103a6e4302fcbab883987149ac01b7ec8287a473ffffffffffffffffffffffffffffffffffffffff1682526020820190565b610dfe6112dd565b610d0a565b610e0b61124b565b610cfb565b600181148c14610e5c5750818651806102998082019082821067ffffffffffffffff831117610e4f575b611d28833903908df5610d0a57610dfe6112dd565b610e5761124b565b610e3a565b600281148c14610ea65750818651806102c18082019082821067ffffffffffffffff831117610e99575b6117a7833903908df515610df657610d0a565b610ea161124b565b610e86565b600303610d0a57818651806102c08082019082821067ffffffffffffffff831117610ee1575b611a68833903908df5610dfe57610dfe6112dd565b610ee961124b565b610ecc565b85517f6328ccb200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602490fd5b600485517fcb6e5344000000000000000000000000000000000000000000000000000000008152fd5b600485517f99faaa04000000000000000000000000000000000000000000000000000000008152fd5b503461000e57602060031936011261000e57610fa0610134565b610fa98161144b565b73ffffffffffffffffffffffffffffffffffffffff90818116600092818452836020526002604085200154161561105a575061102e600291837f11a3cf439fb225bfe74225716b6774765670ec1060e3796802e62139d69974da81604051a273ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b017fffffffffffffffffffffffff00000000000000000000000000000000000000008154169055604051f35b602490604051907f6b0136160000000000000000000000000000000000000000000000000000000082526004820152fd5b6020908160408183019282815285518094520193019160005b8281106110b2575050505090565b835173ffffffffffffffffffffffffffffffffffffffff16855293810193928101926001016110a4565b503461000e5760208060031936011261000e576110f7610134565b90611101826114ba565b73ffffffffffffffffffffffffffffffffffffffff91826000911681528082526003604082200192604051908193808654938481520195845280842093915b8383106111635761021d86611157818a038261129c565b6040519182918261108b565b8454811687529581019560019485019490920191611140565b503461000e57602060031936011261000e576020611198610134565b6111a1816114ba565b73ffffffffffffffffffffffffffffffffffffffff8091166000526000825260026040600020015416604051908152f35b503461000e57602060031936011261000e5773ffffffffffffffffffffffffffffffffffffffff611201610134565b166000526000602052604060002054801561122157602090604051908152f35b60046040517f4ca82090000000000000000000000000000000000000000000000000000000008152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff811161128f57604052565b61129761124b565b604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761128f57604052565b506040513d6000823e3d90fd5b60018110611317577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b805482101561135e5760005260206000200190600090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b805480156113e5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01906113c28282611346565b73ffffffffffffffffffffffffffffffffffffffff82549160031b1b1916905555565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b906104ea61143c928054906801000000000000000082101561143e575b600182018155611346565b565b61144661124b565b611431565b611454816114ba565b73ffffffffffffffffffffffffffffffffffffffff809116908160005260006020526001604060002001541633036114895750565b602490604051907fd4ed9a170000000000000000000000000000000000000000000000000000000082526004820152fd5b73ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002054156112215756fe60808060405234610016576102a5908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b6000803560e01c9182634ce34aa2146100685750508063899e104c1461005f5780638df25d92146100565763c4e8fcb51461004e575b600080fd5b610049610213565b506100496101c3565b5061004961014b565b346100e55760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e5576004359167ffffffffffffffff83116100e257506100bb60209236906004016100e9565b50507f4ce34aa2000000000000000000000000000000000000000000000000000000008152f35b80fd5b5080fd5b9181601f840112156100495782359167ffffffffffffffff83116100495760208085019460c0850201011161004957565b9181601f840112156100495782359167ffffffffffffffff8311610049576020808501948460051b01011161004957565b50346100495760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100495767ffffffffffffffff6004358181116100495761019c9036906004016100e9565b5050602435908111610049576101b690369060040161011a565b5050602060405160008152f35b50346100495760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100495760043567ffffffffffffffff8111610049576101b690369060040161011a565b50346100495760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100495760043573ffffffffffffffffffffffffffffffffffffffff81160361004957602435801515036100495700fea264697066735822122028dd536f79e3f20510b4084f1b3a32387606ad3e1e23466226736308c7be3c9f64736f6c634300080e003360808060405234610016576102a5908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b6000803560e01c9182634ce34aa2146100685750508063899e104c1461005f5780638df25d92146100565763c4e8fcb51461004e575b600080fd5b610049610213565b506100496101c3565b5061004961014b565b346100e55760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e5576004359167ffffffffffffffff83116100e257506100bb60209236906004016100e9565b50507fabcd0000000000000000000000000000000000000000000000000000000000008152f35b80fd5b5080fd5b9181601f840112156100495782359167ffffffffffffffff83116100495760208085019460c0850201011161004957565b9181601f840112156100495782359167ffffffffffffffff8311610049576020808501948460051b01011161004957565b50346100495760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100495767ffffffffffffffff6004358181116100495761019c9036906004016100e9565b5050602435908111610049576101b690369060040161011a565b5050602060405160008152f35b50346100495760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100495760043567ffffffffffffffff8111610049576101b690369060040161011a565b50346100495760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100495760043573ffffffffffffffffffffffffffffffffffffffff81160361004957602435801515036100495700fea26469706673582212208a76155313170bf5689bf28ab5d062c2852a4ec42556720676f014847cb357bc64736f6c634300080e003360808060405234610016576102a4908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b6000803560e01c9182634ce34aa2146100685750508063899e104c1461005f5780638df25d92146100565763c4e8fcb51461004e575b600080fd5b610049610212565b506100496101c2565b5061004961014a565b346100e45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e4576004359167ffffffffffffffff83116100e157506100ba600492369084016100e8565b50507f09caebf3000000000000000000000000000000000000000000000000000000008152fd5b80fd5b5080fd5b9181601f840112156100495782359167ffffffffffffffff83116100495760208085019460c0850201011161004957565b9181601f840112156100495782359167ffffffffffffffff8311610049576020808501948460051b01011161004957565b50346100495760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100495767ffffffffffffffff6004358181116100495761019b9036906004016100e8565b5050602435908111610049576101b5903690600401610119565b5050602060405160008152f35b50346100495760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100495760043567ffffffffffffffff8111610049576101b5903690600401610119565b50346100495760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100495760043573ffffffffffffffffffffffffffffffffffffffff81160361004957602435801515036100495700fea2646970667358221220601d81821ec5a2aa5bafb4f6169e3409d85c288b3691c0d1368237676b73a40364736f6c634300080e0033608080604052346100165761027d908161001c8239f35b600080fdfe60806040526004361015610013575b600080fd5b6000803560e01c9081634ce34aa21461006657508063899e104c1461005d5780638df25d92146100545763c4e8fcb51461004c57600080fd5b61000e6101eb565b5061000e61019b565b5061000e610123565b346100be5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100be5760043567ffffffffffffffff81116100ba576100b59036906004016100c1565b505080fd5b5080fd5b80fd5b9181601f8401121561000e5782359167ffffffffffffffff831161000e5760208085019460c0850201011161000e57565b9181601f8401121561000e5782359167ffffffffffffffff831161000e576020808501948460051b01011161000e57565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5767ffffffffffffffff60043581811161000e576101749036906004016100c1565b505060243590811161000e5761018e9036906004016100f2565b5050602060405160008152f35b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e5761018e9036906004016100f2565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043573ffffffffffffffffffffffffffffffffffffffff81160361000e576024358015150361000e5700fea26469706673582212208188d611178d87fc6fce9b15c9f956b41b5fd6b8f7a396fa93a9d73d529de22f64736f6c634300080e0033a2646970667358221220e447425139b395f15b084ce6d41f45c1819cc450455668f0d1a26229edbdc3a964736f6c634300080e003360808060405234610016576102a5908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b6000803560e01c9182634ce34aa2146100685750508063899e104c1461005f5780638df25d92146100565763c4e8fcb51461004e575b600080fd5b610049610213565b506100496101c3565b5061004961014b565b346100e55760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e5576004359167ffffffffffffffff83116100e257506100bb60209236906004016100e9565b50507f4ce34aa2000000000000000000000000000000000000000000000000000000008152f35b80fd5b5080fd5b9181601f840112156100495782359167ffffffffffffffff83116100495760208085019460c0850201011161004957565b9181601f840112156100495782359167ffffffffffffffff8311610049576020808501948460051b01011161004957565b50346100495760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100495767ffffffffffffffff6004358181116100495761019c9036906004016100e9565b5050602435908111610049576101b690369060040161011a565b5050602060405160008152f35b50346100495760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100495760043567ffffffffffffffff8111610049576101b690369060040161011a565b50346100495760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100495760043573ffffffffffffffffffffffffffffffffffffffff81160361004957602435801515036100495700fea264697066735822122028dd536f79e3f20510b4084f1b3a32387606ad3e1e23466226736308c7be3c9f64736f6c634300080e003360808060405234610016576102a5908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b6000803560e01c9182634ce34aa2146100685750508063899e104c1461005f5780638df25d92146100565763c4e8fcb51461004e575b600080fd5b610049610213565b506100496101c3565b5061004961014b565b346100e55760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e5576004359167ffffffffffffffff83116100e257506100bb60209236906004016100e9565b50507fabcd0000000000000000000000000000000000000000000000000000000000008152f35b80fd5b5080fd5b9181601f840112156100495782359167ffffffffffffffff83116100495760208085019460c0850201011161004957565b9181601f840112156100495782359167ffffffffffffffff8311610049576020808501948460051b01011161004957565b50346100495760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100495767ffffffffffffffff6004358181116100495761019c9036906004016100e9565b5050602435908111610049576101b690369060040161011a565b5050602060405160008152f35b50346100495760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100495760043567ffffffffffffffff8111610049576101b690369060040161011a565b50346100495760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100495760043573ffffffffffffffffffffffffffffffffffffffff81160361004957602435801515036100495700fea26469706673582212208a76155313170bf5689bf28ab5d062c2852a4ec42556720676f014847cb357bc64736f6c634300080e003360808060405234610016576102a4908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b6000803560e01c9182634ce34aa2146100685750508063899e104c1461005f5780638df25d92146100565763c4e8fcb51461004e575b600080fd5b610049610212565b506100496101c2565b5061004961014a565b346100e45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e4576004359167ffffffffffffffff83116100e157506100ba600492369084016100e8565b50507f09caebf3000000000000000000000000000000000000000000000000000000008152fd5b80fd5b5080fd5b9181601f840112156100495782359167ffffffffffffffff83116100495760208085019460c0850201011161004957565b9181601f840112156100495782359167ffffffffffffffff8311610049576020808501948460051b01011161004957565b50346100495760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100495767ffffffffffffffff6004358181116100495761019b9036906004016100e8565b5050602435908111610049576101b5903690600401610119565b5050602060405160008152f35b50346100495760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100495760043567ffffffffffffffff8111610049576101b5903690600401610119565b50346100495760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100495760043573ffffffffffffffffffffffffffffffffffffffff81160361004957602435801515036100495700fea2646970667358221220601d81821ec5a2aa5bafb4f6169e3409d85c288b3691c0d1368237676b73a40364736f6c634300080e0033608080604052346100165761027d908161001c8239f35b600080fdfe60806040526004361015610013575b600080fd5b6000803560e01c9081634ce34aa21461006657508063899e104c1461005d5780638df25d92146100545763c4e8fcb51461004c57600080fd5b61000e6101eb565b5061000e61019b565b5061000e610123565b346100be5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100be5760043567ffffffffffffffff81116100ba576100b59036906004016100c1565b505080fd5b5080fd5b80fd5b9181601f8401121561000e5782359167ffffffffffffffff831161000e5760208085019460c0850201011161000e57565b9181601f8401121561000e5782359167ffffffffffffffff831161000e576020808501948460051b01011161000e57565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5767ffffffffffffffff60043581811161000e576101749036906004016100c1565b505060243590811161000e5761018e9036906004016100f2565b5050602060405160008152f35b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e5761018e9036906004016100f2565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043573ffffffffffffffffffffffffffffffffffffffff81160361000e576024358015150361000e5700fea26469706673582212208188d611178d87fc6fce9b15c9f956b41b5fd6b8f7a396fa93a9d73d529de22f64736f6c634300080e0033";

type ConduitControllerMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConduitControllerMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConduitControllerMock__factory extends ContractFactory {
  constructor(...args: ConduitControllerMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _conduitNum: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConduitControllerMock> {
    return super.deploy(
      _conduitNum,
      overrides || {}
    ) as Promise<ConduitControllerMock>;
  }
  override getDeployTransaction(
    _conduitNum: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_conduitNum, overrides || {});
  }
  override attach(address: string): ConduitControllerMock {
    return super.attach(address) as ConduitControllerMock;
  }
  override connect(signer: Signer): ConduitControllerMock__factory {
    return super.connect(signer) as ConduitControllerMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConduitControllerMockInterface {
    return new utils.Interface(_abi) as ConduitControllerMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConduitControllerMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ConduitControllerMock;
  }
}
